'use server';

/**
 * @fileOverview AI-powered idea sparker for generating story ideas.
 *
 * - generateStoryIdeas - A function that generates story ideas based on custom prompts.
 * - GenerateStoryIdeasInput - The input type for the generateStoryIdeas function.
 * - GenerateStoryIdeasOutput - The return type for the generateStoryIdeas function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateStoryIdeasInputSchema = z.object({
  prompt: z
    .string()
    .describe('A custom prompt to guide the AI in generating story ideas.'),
});
export type GenerateStoryIdeasInput = z.infer<typeof GenerateStoryIdeasInputSchema>;

const GenerateStoryIdeasOutputSchema = z.object({
  storyIdeas: z.array(z.string()).describe('An array of story ideas generated by the AI.'),
});
export type GenerateStoryIdeasOutput = z.infer<typeof GenerateStoryIdeasOutputSchema>;

export async function generateStoryIdeas(input: GenerateStoryIdeasInput): Promise<GenerateStoryIdeasOutput> {
  return generateStoryIdeasFlow(input);
}

const storyIdeasPrompt = ai.definePrompt({
  name: 'storyIdeasPrompt',
  input: {schema: GenerateStoryIdeasInputSchema},
  output: {schema: GenerateStoryIdeasOutputSchema},
  prompt: `You are a creative writing assistant for educators. Your task is to generate a list of diverse and engaging story ideas based on the prompt provided by the educator.

Prompt: {{{prompt}}}

Generate at least 3 story ideas.

Format the output as a JSON array of strings.`, // Explicitly request a JSON array format
});

const generateStoryIdeasFlow = ai.defineFlow(
  {
    name: 'generateStoryIdeasFlow',
    inputSchema: GenerateStoryIdeasInputSchema,
    outputSchema: GenerateStoryIdeasOutputSchema,
  },
  async input => {
    const {output} = await storyIdeasPrompt(input);
    return output!;
  }
);
